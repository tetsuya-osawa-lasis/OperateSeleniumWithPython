<html lang="ja"><head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    <title>新規予約申込 内容入力 ｜ 札幌市公共施設予約情報システム</title>
    <meta name="description" content="札幌市公共施設予約情報システム インターネット等を通じ、各種施設の情報が一元的に閲覧でき、施設の案内から予約までを簡単に行えるサービスです。">
    <meta name="keywords" content="札幌市公共施設予約情報システム,施設検索,予約申込">
    <link rel="icon" href="/sapporo/favicon.ico">
    <link rel="apple-touch-icon" sizes="180x180" href="/sapporo/apple-touch-icon.png">
    <link rel="icon" type="image/png" href="/sapporo/android-touch-icon.png" sizes="192x192">

    
    
        <link rel="stylesheet" href="/sapporo/css/style.css?v=_U0TM22D3CHeWw7noisI93bJCHbWj29y25Lp6pMbJIs">
    
<style type="text/css">html{font-size: 15px;}.SideNav,.v-app-bar,.Breadcrumbs,#main,#fixedCotnentsWrapper > .FixedBtnContainer,.h-fixedContent,.v-dialog,.GoToBack.v-btn,.LoadingOverlay,.v-btn--fixed,.Footer,#dialogArea .v-select--is-menu-active,.v-menu__content,.HeaderTitleWrapper,.v-application:before{filter: brightness(100%) contrast(100%);}</style><style id="patched-viewport">@-webkit-keyframes error-ripple { 
  0% { box-shadow: rgba(188, 38, 62, 0.5) 0px 0px 0px 0px; }
  100% { box-shadow: transparent 0px 0px 0px 818px; }
}

@keyframes error-ripple { 
  0% { box-shadow: rgba(188, 38, 62, 0.5) 0px 0px 0px 0px; }
  100% { box-shadow: transparent 0px 0px 0px 818px; }
}

@-webkit-keyframes focus-ripple { 
  0% { box-shadow: rgba(67, 97, 125, 0.5) 0px 0px 0px 0px; }
  100% { box-shadow: transparent 0px 0px 0px 818px; }
}

@keyframes focus-ripple { 
  0% { box-shadow: rgba(67, 97, 125, 0.5) 0px 0px 0px 0px; }
  100% { box-shadow: transparent 0px 0px 0px 818px; }
}

.v-snack:not(.v-snack--absolute) {
height: 928px;
}

.v-application--wrap {
min-height: 928px;
}

.v-application > .v-content {
min-height: 928px;
}

.Combobox_StyledContent.v-menu__content {
max-height: 742.4000000000001px;
}

.ConfirmDialog_body {
max-height: calc(-5rem + 928px);
}

.ListTable.ListTable .ListTable_selectedList .v-table__overflow {
max-height: 371.20000000000005px;
}

.SelectedList .v-table__overflow {
max-height: 371.20000000000005px;
}

.AvailabilityFrames_gridTable .AvailabilityFrames_gridTable_tbody_head_inner {
max-width: 1636px;
}

.AvailabilityFrames_gridTable .AvailabilityFrames_gridTable_tbody_rowTitle {
max-width: 572.5999999999999px;
}

.AvailabilityFrames.is-fixed .AvailabilityFrames_gridTable_thead_rowTitle::after, .AvailabilityFrames.is-fixed .AvailabilityFrames_timeHeader_hourInner::after {
height: 464px;
}

.BottomSheet.v-dialog .BottomSheet_list {
max-height: 464px;
}

@media screen and (max-width: 959px) {
.DialogBox {
max-width: calc(-2rem + 1636px);
}
}

.is-fontsizeBig .DialogBox {
max-width: calc(-30px + 1636px);
}

.HelpBtn_content_body {
max-height: calc(-3.2rem + 928px);
}

.HelpBtn_content_tabItem .v-window-item {
max-height: calc(-18rem + 881.5999999999999px);
}

@media screen and (max-width: 599px) {
.HelpBtn_content_tabItem .v-window-item {
min-height: calc(-18rem + 881.5999999999999px);
}
}

.SideNav {
max-height: calc(-4rem + 928px) !important;
}

@media screen and (max-width: 959px) {
.SideNav {
max-height: 928px !important;
}
}

@media screen and (max-width: 599px) {
.SideNav {
width: 928px !important;
}
}</style></head>
<body>
    <div id="container" tabindex="-1">
        <div id="app" data-app="true" class="theme--light v-application v-application--is-ltr"><div id="dialogArea"><div></div></div> <div class="GlobalNavs"><div class="GlobalNavs_title HeaderTitleWrapper is-straight d-md-none"><div class="HeaderTitle"><a href="/sapporo" aria-label="札幌市公共施設予約情報システム" class="d-flex h-noDecoration"><span class="HeaderTitle_imgWrapper"><img role="img" src="/sapporo/assets/images/title_other_sapporo.svg?v=ndyjqPcBVpc3lfmKYqR6OKBF9QSQlgu_6Q36lUoNlwY" alt="札幌市公共施設予約情報システム" class="HeaderTitle_img"></span></a></div></div><header class="Header v-sheet theme--light v-toolbar v-app-bar v-app-bar--clipped v-app-bar--fixed" data-booted="true" style="margin-top: 0px; transform: translateY(0px); left: 0px; right: 0px;"><div class="v-toolbar__content"><div class="Header_title HeaderTitleWrapper is-dark"><div class="HeaderTitle"><a href="/sapporo" aria-label="札幌市公共施設予約情報システム" class="d-flex h-noDecoration"><span class="HeaderTitle_imgWrapper"><img role="img" src="/sapporo/assets/images/title_menu_sapporo.svg?v=q_Y8xTiWjWBvpQWSJUFgBbM3ZleXBRj9KwjZv_mQeNI" alt="札幌市公共施設予約情報システム" class="HeaderTitle_img"></span></a></div></div><div class="v-toolbar__items Header_toolbarWrapper mr-3"><a href="#mainWrapper" class="h-showAtForcus v-btn v-btn--icon v-btn--round v-btn--tile theme--light v-size--default"><span class="v-btn__content"><span class="IconTextContainer"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">arrow_downward</i> <span class="IconTextContainer_text">
                                本文へ移動
                            </span></span></span></a><!----><button type="button" class="v-btn v-btn--icon v-btn--round v-btn--tile theme--light v-size--default secondary" aria-controls="global-navs-1-drawer" aria-expanded="true"><span class="v-btn__content"><span class="IconTextContainer"><div><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">close</i><!----></div><span class="IconTextContainer_text">メニュー <span class="h-hiddenAccessible"> 閉じる</span></span></span></span></button></div><div class="SideNav v-navigation-drawer v-navigation-drawer--clipped v-navigation-drawer--fixed v-navigation-drawer--open theme--light" id="global-navs-1-drawer" tabindex="-1" data-booted="true" style="height: 100vh; transform: translateX(0%); width: 20rem;"><div class="v-navigation-drawer__content"><nav aria-label="メニュー" class="SideNav_content"><div class="SideNav_header"><div class="SideNav_header_icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">menu</i><svg aria-hidden="true" class="SvgIcon v-icon notranslate material-icons secondary--stroke warning--text GlobalNavs_loggedinIcon"><text x=".1em" y="1em" paint-order="stroke" stroke-width=".2em">person</text></svg></div> メニュー <div class="spacer"></div><button type="button" class="SideNav_closeBtn is-top transparent v-btn v-btn--outlined theme--light v-size--large white--text" style="display: none;"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate v-icon--left material-icons theme--light">close</i> 閉じる </span></button></div><div role="list" class="v-list SideNav_menu is-main v-sheet theme--light"><a tabindex="0" href="/sapporo" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">home</i></div> <div class="v-list-item__content"><div class="v-list-item__title">ホーム</div></div></a> <a tabindex="0" href="/sapporo/FacilitySearch/Index" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">domain</i></div> <div class="v-list-item__content"><div class="v-list-item__title">施設一覧・検索</div></div></a> <a tabindex="0" href="/sapporo/Notices/Index" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">info</i></div> <div class="v-list-item__content"><div class="v-list-item__title">お知らせ</div></div></a> <div class="SideNav_pocket h-deep py-5"><div class="px-3"><div class="mb-2"><span class="Label is-small warning mr-2"><i aria-hidden="true" class="v-icon notranslate h-ctDeep v-icon--left material-icons theme--light">person</i>
                                ログイン中
                                <span class="h-hiddenAccessible">:</span></span> <span class="font-weight-bold">工藤　真咲</span> <span class="font-weight-regular h-font-small">さん</span></div> <div class="BtnGroup d-flex justify-center is-large ma-0"><span class="BtnGroup_btnWrapper"><a href="/sapporo/RequestStatuses/Index" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--x-large secondary"><span class="v-btn__content"><span class="IconTextContainer is-wide"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">access_time</i> <span class="IconTextContainer_text">
                                                申込状況
                                            </span></span></span></a></span> <span class="BtnGroup_btnWrapper"><a href="/sapporo/Favorites/Index" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--x-large secondary"><span class="v-btn__content"><span class="IconTextContainer is-wide"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">star</i> <span class="IconTextContainer_text">
                                                    お気に入り
                                                </span></span></span></a></span> <span class="BtnGroup_btnWrapper"><a href="/sapporo/Messages/Index" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--x-large secondary"><span class="v-btn__content"><span class="IconTextContainer is-wide"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">email</i> <span class="IconTextContainer_text">
                                                    メッセージ
                                                </span></span></span></a></span></div></div> <div role="list" class="v-list SideNav_menu is-sub mt-3 v-sheet theme--light"><a tabindex="0" href="/sapporo/Users/Details" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">settings</i></div> <div class="v-list-item__content"><div class="v-list-item__title">アカウント設定</div></div></a> <a tabindex="0" href="/sapporo/Logout" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">exit_to_app</i></div> <div class="v-list-item__content"><div class="v-list-item__title">ログアウト</div></div></a></div></div></div> <div role="list" class="v-list SideNav_menu is-sub v-sheet theme--light"><a tabindex="0" href="/sapporo/public/help.html" role="listitem" class="v-list-item v-list-item--link theme--light" target="_blank" rel="noopener noreferrer"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">help</i></div> <div class="v-list-item__content"><div class="v-list-item__title">ヘルプ<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span></div></div><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a> <a tabindex="0" href="/sapporo/Sitemap" role="listitem" class="v-list-item v-list-item--link theme--light"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">map</i></div> <div class="v-list-item__content"><div class="v-list-item__title">サイトマップ</div></div></a> <a tabindex="0" href="/sapporo/public/terms.html" role="listitem" class="v-list-item v-list-item--link theme--light" target="_blank" rel="noopener noreferrer"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">subject</i></div> <div class="v-list-item__content"><div class="v-list-item__title">規約と方針<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span></div></div><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a> <a tabindex="0" href="/sapporo/public/contact.html" role="listitem" class="v-list-item v-list-item--link theme--light" target="_blank" rel="noopener noreferrer"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">phone</i></div> <div class="v-list-item__content"><div class="v-list-item__title">お問い合わせ<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span></div></div><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a> <a tabindex="0" href="/sapporo/public/tokushoho.html" role="listitem" class="v-list-item v-list-item--link theme--light" target="_blank" rel="noopener noreferrer"><div class="v-list-item__icon"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">format_list_bulleted</i></div> <div class="v-list-item__content"><div class="v-list-item__title">特定商取引法に基づく表示<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span></div></div><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a></div><div class="text-center"><button type="button" class="SideNav_closeBtn is-bottom transparent v-btn v-btn--outlined theme--light v-size--large white--text h-showAtForcus"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate v-icon--left material-icons theme--light">close</i> 閉じる </span></button></div></nav></div><div class="v-navigation-drawer__border"></div></div><div><span>ログイン中：</span> <strong class="text-truncate">工藤　真咲</strong> <span>さん</span> <span><a href="/sapporo/Logout" class="is-md-default h-deep v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--default primary"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate v-icon--left material-icons theme--light">exit_to_app</i>
                    ログアウト
                </span></a></span></div><div class="spacer"></div><hr role="presentation" class="mx-2 v-divider v-divider--inset v-divider--vertical theme--light"><button type="button" class="v-btn v-btn--icon v-btn--round v-btn--tile theme--light v-size--default" aria-controls="globalConfigDialog"><span class="v-btn__content"><span class="IconTextContainer"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">font_adjuster</i> <span class="IconTextContainer_text">
                                表示設定
                            </span></span></span></button><div role="presentation" aria-hidden="true" class="v-dialog__container" title="表示設定"></div></div></header></div> <div class="v-main v-content" data-booted="true" style="padding: 0px 0px 0px 300px;"><div class="v-main__wrap v-content__wrap"><nav aria-labelledby="bread-2_label" class="Breadcrumbs"><span id="bread-2_label" role="presentation" class="h-hiddenAccessible">ナビゲーション:</span><ul class="v-breadcrumbs theme--light"><li><a href="/sapporo/" class="v-breadcrumbs__item"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light Breadcrumbs_homeIcon">home</i><span class="Breadcrumbs_name"> ホーム </span></a></li><li class="v-breadcrumbs__divider"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">chevron_right</i></li><li><a href="https://yoyaku.harp.lg.jp/sapporo/FacilityAvailability/Index/011002/0055?ptn=2&amp;d=2025-10-30&amp;sd=2025-10-30&amp;ed=2025-10-30" class="v-breadcrumbs__item"><!----><span class="Breadcrumbs_name"> 施設の空き状況 </span></a></li><li class="v-breadcrumbs__divider"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">chevron_right</i></li><li role="presentation"></li></ul></nav> <main role="main" id="mainWrapper" tabindex="-1" class="container container--fluid main_wrapper"><div id="main" class="main container grid-list-md
    
 "><!----> <h1 class="Heading1"><i aria-hidden="true" class="v-icon notranslate Heading_icon material-icons theme--light">calendar_today</i>
        新規予約申込
        <div class="spacer"></div> <span class="Label is-whiteBack ml-2"><span class="h-font-small">どうぎんカーリングスタジアム</span></span> <div role="presentation" aria-hidden="true" class="v-dialog__container d-inline"></div><a href="/sapporo/public/reservations-insert.html" target="_blank" class="v-btn v-btn--icon v-btn--round theme--light v-size--default primary--text"><span class="v-btn__content"><span class="IconTextContainer"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">help</i><span class="h-hiddenAccessible">ヘルプ - 予約申込</span><span aria-hidden="true" role="presentation" class="IconTextContainer_text"> ヘルプ <i aria-hidden="true" class="v-icon notranslate material-icons theme--light">open_in_new</i></span><span class="h-hiddenAccessible">ウインドウを別のタブで表示します</span></span></span></a></h1> <div class="v-stepper is-4step theme--light" role="region" aria-label="ステップフロー"><div class="v-stepper__header"><div class="v-stepper__step v-stepper__step--active" aria-current="step"><span class="v-stepper__step__step primary">1</span><div class="v-stepper__label">内容入力</div></div><div class="v-stepper__step v-stepper__step--inactive"><span class="v-stepper__step__step">2</span><div class="v-stepper__label">支払方法</div></div><div class="v-stepper__step v-stepper__step--inactive"><span class="v-stepper__step__step">3</span><div class="v-stepper__label">確認</div></div><div class="v-stepper__step v-stepper__step--inactive"><span class="v-stepper__step__step">4</span><div class="v-stepper__label">完了</div></div></div></div> <table-of-contents></table-of-contents> <div id="display-error-_base" tabindex="-1"><!----></div> <div role="note" class="v-alert mt-3 v-sheet theme--light info"><div class="v-alert__wrapper"><div class="v-alert__content"><span class="BalloonBeak info--text is-1per4"></span> <span role="alert"><span class="h-hiddenAccessible">現在 予約1 のタブを表示中。</span> 予約の内容を入力してください。
    </span> <!----></div></div></div> <!----> <!----> <div class="v-window transparent v-item-group theme--light v-tabs-items"><div class="v-window__container" style=""><div tabindex="-1" role="tabpanel" aria-hidden="false" class="v-window-item v-window-item--active" id="item-0" style=""><!----> <form novalidate="novalidate" class="v-form"><input name="__RequestVerificationToken" type="hidden" value="CfDJ8OHcDkGEczVPgTVbxua4Lf4q25ESzoLqf7ym_58nlpACrlivqe4Rf59qm22bMzgy1j0SdkpYZT9rdkTH4teH5gE13nfKGHkp8666oCbHuHppTomFNOgkcwN_cJVtNYdu9tlQKI7JdDa0KXjE8A5mjrw"> <div role="list" class="v-list section elevation-2 mb-0 pt-4 h-radius-bottom-0 v-sheet theme--light v-list--dense"><h2 role="listitem" class="pa-0 flex-wrap v-list-item theme--light" style="gap: 10px;"><div role="listitem" class="flex-fill pa-0 v-list-item theme--light"><div class="v-avatar v-list-item__avatar" style="width: 3.8em;"><h2 class="IconTextContainer is-even h-circle-l secondary"><span class="IconTextContainer_text">
                                    予約
                                    <span class="h-hiddenAccessible">1</span></span> <span aria-hidden="true" class="IconTextContainer_text is-large">
                                    1
                                </span></h2></div> <div class="v-list-item__content"><div class="v-list-item__title headline font-weight-bold">
                                カーリングシート
                                
                                    Ａシート
                                </div> <div class="v-list-item__subtitle"><time datetime="2025-10-30T00:00:00"> 2025/10/30(木) </time> <span class="InputContainer InputRange is-time d-inline"> 15:00-17:00 <!----></span></div> <input type="hidden" name="acceptanceBranchNumber" value="1"></div></div> <!----></h2> <div class="h-radius h-base section mt-3 mb-0"><div class="DetailTable is-form"><div class="DetailTable_list"><dl class="DetailTable_item"><dt class="DetailTable_label">利用目的<span class="Label error--text is-small ml-1">必須</span></dt><dd class="DetailTable_data"><span class="InputContainer"><span class="Combobox"><div class="v-input theme--light v-text-field v-text-field--is-booted v-text-field--placeholder v-select v-autocomplete"><div class="v-input__control"><div class="v-input__slot"><div class="v-select__slot"><label for="input-54" class="v-label theme--light" id="input-54-label" style="left: 0px; right: auto; position: absolute;">利用目的</label><input autocomplete="off" required="required" id="input-54" placeholder="未選択…" type="text" role="combobox" aria-haspopup="listbox" aria-expanded="false" aria-controls="list-54" aria-autocomplete="list" aria-labelledby="input-54-label input-54-messages"><div class="v-input__append-inner"><div class="v-input__icon v-input__icon--clear"><button disabled="disabled" type="button" aria-label="クリア" class="v-icon notranslate v-icon--disabled v-icon--link material-icons theme--light" id="input-54-clear" title="クリア" aria-labelledby="input-54-label input-54-clear">clear</button></div></div><div class="v-input__append-inner"><div class="v-input__icon v-input__icon--append"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">arrow_drop_down</i></div></div><input type="hidden"></div><div class="v-menu"><!----></div></div><div class="v-text-field__details"><div class="v-messages theme--light"><div class="v-messages__wrapper" id="input-54-messages" tabindex="-1"></div></div></div></div></div><input type="hidden" name="utilizationPurposeId"></span></span></dd></dl> <dl class="DetailTable_item"><dt class="DetailTable_label">利用人数<span class="Label error--text is-small ml-1">必須</span></dt><dd class="DetailTable_data"><span class="InputContainer h-w10 h-wMaxfull"><div class="v-input theme--light v-text-field v-text-field--is-booted"><div class="v-input__control"><div class="v-input__slot"><div class="v-text-field__slot"><label for="input-61" class="v-label theme--light" id="input-61-label" style="left: 0px; right: auto; position: absolute;">利用人数</label><input id="input-61" type="text" aria-labelledby="input-61-label input-61-messages"><div class="v-text-field__suffix">人</div></div></div><div class="v-text-field__details"><div class="v-messages theme--light"><div class="v-messages__wrapper" id="input-61-messages" tabindex="-1"></div></div></div></div></div><input type="hidden" name="usePeople"></span></dd></dl></div></div> <hr role="separator" aria-orientation="horizontal" class="my-6 is-fullInSection v-divider theme--light"> <div class="DetailTable"><div class="DetailTable_list"><dl class="DetailTable_item"><dt class="DetailTable_label">市内／市外</dt><dd class="DetailTable_data"><span class="InputContainer"> 市内 <input type="hidden" value="1"></span></dd></dl> <input type="hidden" name="feeItemCategories[0].selectedCode" value="1"> <input type="hidden" name="feeItemCategories[0].feeItemCategoryCode" value="10"> <input type="hidden" name="feeItemCategories[0].feeItemCategoryName" value="学生"> <input type="hidden" name="feeItemCategories[0].isChange" value="false"> <input type="hidden" name="feeItemCategories[0].feeItems[0].feeItemId" value="29"> <input type="hidden" name="feeItemCategories[0].feeItems[0].feeItemCode" value="1"> <input type="hidden" name="feeItemCategories[0].feeItems[0].feeItemName" value="一般"><input type="hidden" name="feeItemCategories[0].feeItems[1].feeItemId" value="30"> <input type="hidden" name="feeItemCategories[0].feeItems[1].feeItemCode" value="2"> <input type="hidden" name="feeItemCategories[0].feeItems[1].feeItemName" value="学生"><input type="hidden" name="feeItemCategories[1].selectedCode" value="0"> <input type="hidden" name="feeItemCategories[1].feeItemCategoryCode" value="12"> <input type="hidden" name="feeItemCategories[1].feeItemCategoryName" value="入場料"> <input type="hidden" name="feeItemCategories[1].isChange" value="false"> <input type="hidden" name="feeItemCategories[1].feeItems[0].feeItemId" value="31"> <input type="hidden" name="feeItemCategories[1].feeItems[0].feeItemCode" value="0"> <input type="hidden" name="feeItemCategories[1].feeItems[0].feeItemName" value="無"><input type="hidden" name="feeItemCategories[1].feeItems[1].feeItemId" value="32"> <input type="hidden" name="feeItemCategories[1].feeItems[1].feeItemCode" value="1"> <input type="hidden" name="feeItemCategories[1].feeItems[1].feeItemName" value="有"></div></div></div> <div class="h-radius h-base section mt-3 mb-0"><div class="DetailTable is-form"><div class="DetailTable_list"><dl class="DetailTable_item"><dt class="DetailTable_label">連絡事項</dt><dd class="DetailTable_data"><span class="InputContainer" style="overflow: auto;"><div class="v-input v-textarea theme--light v-text-field v-text-field--is-booted"><div class="v-input__control"><div class="v-input__slot"><div class="v-text-field__slot"><label for="input-67" class="v-label theme--light" id="input-67-label" style="left: 0px; right: auto; position: absolute;">連絡事項</label><textarea name="message" id="input-67" rows="5" aria-labelledby="input-67-label input-67-messages"></textarea></div></div><div class="v-text-field__details"><div class="v-messages theme--light"><div class="v-messages__wrapper" id="input-67-messages" tabindex="-1"></div></div></div></div></div></span></dd></dl></div></div>   <hr role="separator" aria-orientation="horizontal" class="mt-2 mb-4 is-fullInSection v-divider theme--light"> <div class="layout headline text--primary"><div class="flex"><strong>室場利用料</strong></div> <div class="flex text-right font-weight-bold"><span class="InputContainer is-input-right"> 3,400 円 <input type="hidden" value="3400"></span></div></div></div> <hr role="separator" aria-orientation="horizontal" class="my-6 is-fullInSection v-divider theme--light"> <div class="h-radius info section my-0"><div class="d-flex h-flex-fb-wrap"><button type="button" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--default" aria-controls="equipmentDialog"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate v-icon--left material-icons theme--light">speaker_group</i>
                            備品を追加
                            <i aria-hidden="true" class="v-icon notranslate ml-5 material-icons theme--light">add</i><i aria-hidden="true" title="ダイアログを表示します" class="v-icon notranslate material-icons ml-1 h-openDialog">open_in_browser</i></span></button> <div class="spacer"></div> <div role="presentation" aria-hidden="true" class="v-dialog__container d-inline my-2"></div><button type="button" class="v-btn v-btn--icon v-btn--round theme--light v-size--default primary--text" aria-controls="help-default-6"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">help</i><span class="h-hiddenAccessible">ヒント:備品を追加の説明</span></span></button></div> <!----></div></div></form> <div class="mt-0 section warning h-radius-top-0"><div class="layout headline text--primary h-flex-fb-wrap pr-3"><div class="flex"><span class="h-circle grey darken-2 white--text mr-1"><span class="h-hiddenAccessible">予約</span>
                        1</span> <strong>合計利用料</strong></div> <div class="flex text-right"><strong><span class="InputContainer d-inline-block display-2 font-weight-bold"> 3,400 円 <input type="hidden" value="3400"></span></strong></div></div></div> <div aria-owns="fixed-btn-container-7" class="h-focusable mb-12 mt-2" tabindex="0" style="min-height: 76px;"><h2 id="fixed-btn-container-7-heading" class="h-hiddenAccessible"> 下部操作欄 </h2></div></div></div></div> <div><!----><div role="presentation" aria-hidden="true" class="v-dialog__container" min-width="290"><!----></div></div> <div role="presentation" aria-hidden="true" class="v-dialog__container"></div> <div class="mt-12"><a href="https://yoyaku.harp.lg.jp/sapporo/FacilityAvailability/Index/011002/0055?ptn=2&amp;d=2025-10-30&amp;sd=2025-10-30&amp;ed=2025-10-30" class="GoToRoot"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">undo</i>施設の空き状況[どうぎんカーリングスタジアム]にもどる
        </a></div></div> <div id="fixedCotnentsWrapper" class="main container is-fixedContentsWrapper"><div id="fixed-btn-container-7" role="region" aria-labelledby="fixed-btn-container-7-heading" tabindex="-1" tag="div" class="FixedBtnContainer h-focusable FixedBtnContainer-fixed" style="width: calc(1200px); transform: translateY(0px);"><div class="layout align-center justify-center row ma-0 py-3"><div class="text-center"><button type="button" class="is-main v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--x-large secondary"><span class="v-btn__content">
                        支払方法へ
                    </span></button></div></div><div class="text-center"><!----><!----></div></div></div> <a href="https://yoyaku.harp.lg.jp/sapporo/FacilityAvailability/Index/011002/0055?ptn=2&amp;d=2025-10-30&amp;sd=2025-10-30&amp;ed=2025-10-30" class="d-none d-md-inline-flex GoToBack v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--default"><span class="v-btn__content"><i aria-hidden="true" class="v-icon notranslate GoToBack_icon v-icon--left material-icons theme--light secondary--text">arrow_back</i>前のページに戻る
            </span></a> <button type="button" class="GoToUpBtn SideFloatBtn v-btn v-btn--bottom v-btn--is-elevated v-btn--fab v-btn--fixed v-btn--has-bg v-btn--right v-btn--round theme--dark v-size--default is-movedUp" style="display: none;"><span class="v-btn__content"><div class="layout SideFloatBtn_text align-center column justify-center"><i aria-hidden="true" class="v-icon notranslate material-icons theme--light">keyboard_arrow_up</i> 上へ </div></span></button></main> <footer class="Footer"><nav aria-label="footer navigation"><ul class="NavLink"><li><a href="/sapporo/public/help.html" class="NavLink_link" target="_blank" rel="noopener noreferrer">ヘルプ<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a></li> <li><a href="/sapporo/Sitemap" class="NavLink_link">サイトマップ</a></li> <li><a href="/sapporo/public/terms.html" class="NavLink_link" target="_blank" rel="noopener noreferrer">規約と方針<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a></li> <li><a href="/sapporo/public/contact.html" class="NavLink_link" target="_blank" rel="noopener noreferrer">お問い合わせ<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a></li> <li><a href="/sapporo/public/tokushoho.html" class="NavLink_link" target="_blank" rel="noopener noreferrer">特定商取引法に基づく表示<span class="h-hiddenAccessible">(ウインドウを別のタブで表示します)</span><i aria-hidden="true" title="ウインドウを別のタブで表示します" class="v-icon notranslate material-icons ml-1 h-openWindow">open_in_new</i></a></li></ul> <ul class="NavLink is-inline"><li><a href="/sapporo" class="NavLink_link">ホーム</a></li> <li><a href="/sapporo/FacilitySearch/Index" class="NavLink_link">施設一覧・検索</a></li> <li><a href="/sapporo/Notices/Index" class="NavLink_link">お知らせ</a></li></ul></nav> <div class="Footer_copyright">© 札幌市公共施設予約情報システム</div></footer> <div class="SnackbarCreator h-fixedContent" style="bottom: 76px;"><div role="alert" class="h-hiddenAccessible"></div><div role="alert" class="h-hiddenAccessible"></div><div class="SnackbarCreator_container"><!----></div></div> <div role="alert" class="LoadingOverlay h-fixedContent is-full" style="top: 60px;"><!----></div> <span role="presentation"></span></div></div><div role="alertdialog" class="v-dialog__content" aria-modal="true" aria-hidden="true" aria-labelledby="help-default-3-header" style="z-index: 0;"><div id="help-default-3" class="v-dialog HelpBtn_content h-radius" style="transform-origin: center center; max-width: calc(100% - 2.5rem); width: 25rem; display: none;"><div class="DialogIcon"><svg aria-hidden="true" class="SvgIcon v-icon notranslate material-icons primary--text white--stroke is-large"><text x=".1em" y="1em" paint-order="stroke" stroke-width=".2em"> help</text></svg></div><div class="HelpBtn_content_body white v-sheet pa-8 h-radius"><h2 id="help-default-3-header" class="headline mb-2"><span>ヘルプ - 予約申込</span></h2><div tabindex="-1"></div><!----><div class="text-center mt-2"><button type="button" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--default h-base"><span class="v-btn__content"> 閉じる </span></button></div></div></div></div><div role="dialog" class="v-dialog__content" aria-modal="true" aria-hidden="true" aria-label="備品を追加" style="z-index: 0;"><div id="equipmentDialog" class="v-dialog DialogBox is-fullscreen" style="transform-origin: center center; width: 100%; display: none;"><div role="alert" class="LoadingOverlay h-fixedContent is-absolute" style="top: 60px;"><!----></div><!----></div></div><div role="alertdialog" class="v-dialog__content" aria-modal="true" aria-hidden="true" aria-labelledby="help-default-6-header" style="z-index: 0;"><div id="help-default-6" class="v-dialog HelpBtn_content h-radius" style="transform-origin: center center; max-width: calc(100% - 2.5rem); width: 25rem; display: none;"><div class="DialogIcon"><svg aria-hidden="true" class="SvgIcon v-icon notranslate material-icons primary--text white--stroke is-large"><text x=".1em" y="1em" paint-order="stroke" stroke-width=".2em"> help</text></svg></div><div class="HelpBtn_content_body white v-sheet pa-8 h-radius"><h2 id="help-default-6-header" class="headline mb-2"><span>備品を追加の説明</span></h2><div tabindex="-1">室場の利用に併せて使用したい備品を備品一覧から選択します。追加後、追加した備品の概要が下部に表示されます。※予約時に必ず借りる必要のある備品の削除、編集はできません。</div><!----><div class="text-center mt-2"><button type="button" class="v-btn v-btn--is-elevated v-btn--has-bg theme--light v-size--default h-base"><span class="v-btn__content"> 閉じる </span></button></div></div></div></div><div role="dialog" class="v-dialog__content" aria-modal="true" aria-hidden="true" aria-label="表示設定" style="z-index: 0;"><div id="globalConfigDialog" class="v-dialog DialogBox  DisplayConfigDialog_content" style="transform-origin: center center; width: 30em; display: none;"><div role="alert" class="LoadingOverlay h-fixedContent is-absolute" style="top: 60px;"><!----></div><!----></div></div></div>
    </div>
    


    <script src="/sapporo/js/main.js?v=RGtDSWh_USMj6C7WmG-SNVHxbZXwwENSX4Bs2RNLLcM"></script>

<script src="/sapporo/js/app.js?v=v2a0r5pIrbjM21hKeoezw1c5u4mboa-tjWR0Vu_ZVYg"></script>

    <script type="text/javascript">
        new App.Vue({
            mixins: [App.StoragesMixin],

            created: function () {
                var storages = this.storages;

                storages.setPrefixKey("sapporo")

                var loggedin = true;
                var prevLoggedin = storages.get("loggedin");

                storages.set("loggedin", loggedin);

                if (prevLoggedin && !loggedin) {
                    storages.remove('availability-selections:', { all: true });
                }
            }
        })
    </script>
    

<script>
    Object.assign(window.App.Ml, {
        'label.ok': '確認'
    })
    new App.Vue({
        mixins: [App.RootMixin, App.RuleMixin, App.HistoryStateMixin, App.InputMixin],
        el: '#app',
        data: {
            storeKey: 'reservation-request',
            valid: true,
            equipmentDialogValid: true,
            values: {
                cityType: '1',
                detailList: [{"reservationStatus":null,"statusType":null,"roomType":"3","minUsePeople":null,"capacity":null,"isCourtQuantityRequest":false,"courtQuantity":1,"utilizationPurposeId":null,"utilizationPurposeName":null,"usePeople":null,"reservationFreeItems":[],"message":null,"memo":null,"eventDescription":null,"usageFeeBill":{"usageFee":3400.0,"reductions":[],"hasReductions":false,"additionals":[],"hasAdditionals":false,"reductionFee":0.0,"additionalFee":0.0,"billingAmount":3400.0,"extensionUsage":null,"hasExtension":false,"changeRate":null,"changeFee":null,"cancelRate":null,"cancelFee":null,"refundAmount":null,"refundedAmount":null,"refundedAmountOfApplied":null,"hasRefundExamination":false,"paymentAmount":null,"paymentAmountOfPoolMoney":null,"adjustmentFee":null,"isPaid":false,"paymentDeadlineDate":null},"extensionUsages":null,"validExtensionUsages":null,"hasExtensions":false,"equipmentManagement":{"equipmentManagementId":null,"equipments":[],"hasEquipments":false,"canceledEquipments":null,"allEquipments":null,"actualBillingAmount":0.0,"unpaidAmount":0.0,"allExtensionUsages":null,"usageFee":0.0,"reductions":[],"hasReductions":false,"additionals":[],"hasAdditionals":false,"reductionFee":0.0,"additionalFee":0.0,"billingAmount":0.0,"extensionUsage":null,"hasExtension":false,"changeRate":null,"changeFee":null,"cancelRate":null,"cancelFee":null,"refundAmount":null,"refundedAmount":null,"refundedAmountOfApplied":null,"hasRefundExamination":false,"paymentAmount":null,"paymentAmountOfPoolMoney":null,"adjustmentFee":null,"isPaid":false,"paymentDeadlineDate":null},"hasEquipments":false,"cancelNote":null,"changeNote":null,"hasOnlinePayment":false,"hasZenginAccountTransfer":false,"isUseSuspension":false,"hasFacilityUsePermission":false,"allowUserCancel":false,"allowUserChange":false,"reductionAdditionalMethod":"1","submitted":false,"error":null,"favoriteUrl":"https://yoyaku.harp.lg.jp/sapporo/FacilityAvailability/Index/011002/0055?ptn=1","utilizationPurposes":[{"utilizationPurposeId":54,"utilizationPurposeCategoryCode":"02","utilizationPurposeCategoryName":"スポーツ（屋内）","utilizationPurposeCode":"093","utilizationPurposeName":"カーリング","disabled":false}],"feeItemCategories":[{"feeItemCategoryCode":"10","feeItemCategoryName":"学生","isChange":false,"selectedCode":"1","feeItems":[{"feeItemId":29,"feeItemCode":"1","feeItemName":"一般"},{"feeItemId":30,"feeItemCode":"2","feeItemName":"学生"}]},{"feeItemCategoryCode":"12","feeItemCategoryName":"入場料","isChange":false,"selectedCode":"0","feeItems":[{"feeItemId":31,"feeItemCode":"0","feeItemName":"無"},{"feeItemId":32,"feeItemCode":"1","feeItemName":"有"}]}],"feeItems":[{"feeItemCategoryName":"学生","feeItemName":"一般"},{"feeItemCategoryName":"入場料","feeItemName":"無"}],"hasSearchableEquipments":true,"roomExtensionUsageFee":0.0,"equipmentExtensionUsageFee":0.0,"roomExtensionCancelFee":0.0,"roomExtensionChangeFee":0.0,"equipmentExtensionCancelFee":0.0,"roomExtensionAdjustmentFee":0.0,"equipmentExtensionAdjustmentFee":0.0,"roomExtensionRefundAmount":0.0,"equipmentExtensionRefundAmount":0.0,"roomExtensionPaymentAmount":0.0,"equipmentExtensionPaymentAmount":0.0,"equipmentUsageFeeOfFacilityUsageFeeAdd":0.0,"equipmentReductionFee":0.0,"equipmentAdditionalFee":0.0,"roomChangeFee":0.0,"equipmentChangeFee":0.0,"roomCancelFee":0.0,"equipmentCancelFee":0.0,"roomAdjustmentFee":0.0,"equipmentAdjustmentFee":0.0,"roomUsageFee":3400.0,"equipmentUsageFee":0.0,"roomActualBillingAmount":0.0,"grandTotalRefundableAmount":0.0,"roomRefundAmount":0.0,"roomRefundedAmount":0.0,"equipmentRefundAmount":0.0,"equipmentRefundedAmount":0.0,"roomPaymentAmount":0.0,"roomUnpaidAmount":0.0,"equipmentPaymentAmount":0.0,"equipmentUnpaidAmount":0.0,"allUsageFee":3400.0,"allChangeFee":0.0,"billingAmount":3400.0,"cancelFee":0.0,"hasCancelFee":false,"allCancelFee":0.0,"allRefundAmount":0.0,"allRefundedAmount":0.0,"allUnrefundAmount":0.0,"allRefundedAmountOfApplied":0.0,"allPaymentAmount":0.0,"allUnpaidAmount":0.0,"allPaymentAmountOfPoolMoney":0.0,"unpaid":false,"nearestPaymentDeadlineDate":null,"isCancel":false,"hasUseExamination":true,"hasReductionExamination":true,"hasCancelExamination":true,"isUnderCancelExamination":false,"isUpdate":false,"isReduction":false,"hasPayment":false,"hasRefund":false,"hasRefundExamination":false,"paymentOccurrenceDate":null,"hasSmartLock":false,"smartLockCooperationTime":"00:00:00","smartLockAccessKeyData":null,"usageFeeStatus":0,"requestId":null,"acceptanceBranchNumber":1,"facilityCode":"0055","facilityName":"どうぎんカーリングスタジアム","roomCode":"001","roomName":"カーリングシート","courtName":"Ａシート","courtDisplay":null,"courtSize":null,"usageDate":"2025-10-30T00:00:00","usageTimes":{"start":"15:00:00","end":"17:00:00"},"sessionToken":null,"sysLocalGovernmentCode":null,"sysInsertedUserType":null,"sysUpdatedUserType":null,"sysUpdatedUserId":null,"sysUpdatedDatetime":null,"sysUpdatedUserName":null}],
                equipmentCategoryOptions: []
            },
            timeFrameSettings: {"1":{"displayUsageFeeType":"1","usageFeePageUrl":null,"usageFeePageTitle":null}},
            errorList: {},
            errorMessage: [],
            complatePath: undefined,
            activeTabIndex: 0,
            utilizationPurposesConfig: Object.freeze({
                'group-by': "utilizationPurposeCategoryName",
                'item-key': "utilizationPurposeId",
                'display-column': "utilizationPurposeName",
                'item-columns': [
                    'utilizationPurposeCode',
                    'utilizationPurposeCategoryCode',
                    'utilizationPurposeName',
                    'utilizationPurposeCategoryName'
                ]
            }),
            equipmentRemoveConfirm: {
                title: '備品削除の確認',
                message: 'この備品の選択を削除します。よろしいですか？',
                labelOk: '削除する',
                labelCancel: 'キャンセル'
            },
            activeEquipmentKey: null,
            activeEquipment: null,
            editingEquipment: null,
            equipmentDialog: false,
            equipmentDialogLoading: false,
            equipmentDialogActiveTabIndex: 0,
            equipmentList: [],
            equipmentSearchList: [],
            equipmentPagination: {
                page: 1,
                totalItems: 0,
                itemsPerPage: 10,
            },
            equipmentSelecteds: [],
            equipmentSelectedsIndex: {},
            equipmentSelectedsInputs: {},
            equipmentCategoryFilter: null,
            equipmentCalcurateLabel: '-get-equipment-fees',
            equipmentErrors: {},
            targetCopyDetail: null,
            alertDialog: false,
            alertDialogProps: null,
            copyItems: "<ul><li>利用目的</li><li>利用人数</li>${feeItemCategoryNames}<li>連絡事項</li><li>備品</li><ul>",   
        },
        computed: {
            canShowPrevTab: function () {
                return 0 < this.activeTabIndex;
            },
            canShowNextTab: function () {
                return this.values.detailList.length - 1 > this.activeTabIndex;
            },
            isMultiple: function () {
                return this.values.detailList.length > 1;
            },
            activeTabId: function () {
                return 'item-' + this.activeTabIndex;
            },
            equipmentDialogActiveTabId: function () {
                return 'equipmentItem-' + this.equipmentDialogActiveTabIndex;
            },
            doDisplayUsageFee: function () {
                return (this.timeFrameSettings[this.values.detailList[this.activeTabIndex].acceptanceBranchNumber].displayUsageFeeType == '1');
            },
            doNotDisplayUsageFee: function () {
                return (this.timeFrameSettings[this.values.detailList[this.activeTabIndex].acceptanceBranchNumber].displayUsageFeeType == '2');
            },
            activeDetail: function () {
                return this.values.detailList[this.activeTabIndex];
            },
            activeCopyItems: function () {
                return this.copyItems.replace("${feeItemCategoryNames}", _.chain(this.activeDetail?.feeItemCategories || []).filter("isChange").map(function (it) { return "<li>" + it.feeItemCategoryName + "</li>" }).join("").value())
            },
            detailListsForCopy: function () {
                const list = this.values.detailList;
                return _.chain(list).filter((it) => it.submitted && (it.id !== this.activeDetail.id)).value();
            },
            detailRemoveConfirm: function () {
                const activeDetail = this.activeDetail;
                const id = activeDetail.id;
                return {
                    title: '申込取消の確認',
                    message: '<strong>予約' + id + '</strong> の申込を取消します。よろしいですか？',
                    labelOk: '取消する',
                    labelCancel: 'キャンセル'
                };
            },

            usePeopleRules() {
                return function (minUsePeople, capacity) {
                    let min = (minUsePeople == null ? 1 : minUsePeople);
                    let max = (capacity == null ? 2147483647 : capacity);
                    return [App.RuleMixin.methods.Required(), App.RuleMixin.methods.Range(min, max)];
                }
            },


            equipmentSelectedsInputList: function () {
                const equipmentSelectedsInputs = this.equipmentSelectedsInputs;
                return _.reduce(this.equipmentSelecteds, function (list, equip) {
                    const equipForInput = equipmentSelectedsInputs[equip.equipmentKey];
                    if (equipForInput) {
                        list.push(equipForInput)
                    }
                    return list;
                }, []);
            },
            isAddedEquipment: function () {
                const self = this
                return _.reduce(this.activeDetail.equipmentManagement.equipments, function (indexList, equip) {
                    indexList[equip.equipmentKey] = true
                    return indexList
                }, {})
            },

            availableEquipmentSelecteds: function() {
                return _.filter(this.equipmentSelecteds, 'allowUserRequest');
            },
            
            stockQuantityAddValid: function() {
                return _.some(this.equipmentSelectedsInputs, it => it.stockQuantity === 0);
            },

            getError: function () {
                const self = this;
                return function (key) {
                    return self.getPropertyValue(self.errorList, key);
                }
            },
            getEquipmentError: function () {
                const self = this;
                return function (key) {
                    return self.getPropertyValue(self.equipmentErrors, key);
                }
            }
        },
        watch: {
            equipmentDialog: function (val) {
                if (!val) {
                    this.resetEquipmentSelected();
                    this.equipmentDialogActiveTabIndex = 0;
                }
            },

            activeEquipmentKey: function (val) {
                if (!val) {
                    const index = _.findIndex(this.errorMessage, ['name', 'activeEquipment']);
                    if (index >= 0) {
                        this.errorMessage.splice(index, 1);
                    }
                }
            }
        },
        created: function () {
            const self = this;
            this.store.onError(this.storeKey, this.fetchedError);
            _.forEach(this.values.detailList, function (it) {
                self.$set(it, 'id', it.acceptanceBranchNumber);
            });
            const params = this.getCarrentParams();
            if (!_.isNil(params.active)) {
                this.activeTabIndex = Number(params.active);
                this.setActiveIndexToURLParam();
            }
        },
        methods: {
            beforeChangeTab: function (callback) {
                if (this.isEditEquipment()) {
                    return;
                }

                const self = this;
                this.complatePath = undefined;
                const container = this.$refs['submitBtnContainer-' + this.activeTabIndex];
                const submit = container && container[0] && container[0].onsubmit;
                const key = this.storeKey + '-submit:success';
                if (submit) {
                    this.$nextTick(function () {
                        self.store.$off(key);
                        if (submit() !== false) {
                            self.store.$once(key, function () {
                                self.activeDetail.submitted = true;
                                callback && callback();
                            });
                        }
                    });
                }
                else {
                    callback && callback();
                }
            },
            beforeSubmit: function () {
                const self = this;
                this.complatePath = '/sapporo/ReservationRequests/InsertPayment/011002/0055';
                const container = this.$refs['submitBtnContainer-' + this.activeTabIndex];
                const submit = container && container[0] && container[0].onsubmit;
                const key = this.storeKey + '-submit:success';
                if (submit) {
                    this.$nextTick(function () {
                        self.store.$off(key);
                        if (submit() !== false) {
                            self.store.$once(key, function () {
                                self.activeDetail.submitted = true;
                            });
                        }
                    });
                }
            },
            changeUtilizationPurpose: function () {
                const self = this;
                const container = this.$refs['submitBtnContainer-' + this.activeTabIndex];
                const key = this.storeKey + '-change-utilization-purpose';
                this.$nextTick(function () {
                    const config = container && container[0] && container[0].generateSubmitConfig();
                    if (!config) {
                        return;
                    }
                    config.url = '/sapporo/ReservationRequests/ChangeUtilizationPurpose';
                    self.store.request(key, config)
                        .then(function (response) {
                            self.$set(self.activeDetail, "usageFeeBill", response.data.data.usageFeeBill);
                            self.$set(self.activeDetail, "equipmentManagement", response.data.data.equipmentManagement);
                            self.$set(self.activeDetail, "allUsageFee", response.data.data.allUsageFee);
                            self.$set(self.activeDetail, "roomUsageFee", response.data.data.roomUsageFee);
                            self.$set(self.activeDetail, "equipmentReductionFee", response.data.data.equipmentReductionFee);
                            self.$set(self.activeDetail, "equipmentAdditionalFee", response.data.data.equipmentAdditionalFee);
                            self.$set(self.activeDetail, "equipmentUsageFee", response.data.data.equipmentUsageFee);
                        });
                });
            },

            changeCityType: function (cityType) {
                const self = this;
                const key = this.storeKey + '-change-city-type';

                this.$nextTick(function () {
                    const config = {
                        method: 'get',
                        url: '/sapporo/ReservationRequests/ChangeCityType',
                        params: { cityType: cityType }
                    }

                    self.store.request(key, config)
                        .then(function (response) {
                            _.forEach(self.values.detailList, function (it, index) {
                                self.$set(self.calculateDetail(index), "usageFeeBill", response.data.data[index].usageFeeBill);
                                self.$set(self.calculateDetail(index), "equipmentManagement", response.data.data[index].equipmentManagement);
                                self.$set(self.calculateDetail(index), "allUsageFee", response.data.data[index].allUsageFee);
                                self.$set(self.calculateDetail(index), "roomUsageFee", response.data.data[index].roomUsageFee);
                                self.$set(self.calculateDetail(index), "equipmentReductionFee", response.data.data[index].equipmentReductionFee);
                                self.$set(self.calculateDetail(index), "equipmentAdditionalFee", response.data.data[index].equipmentAdditionalFee);
                                self.$set(self.calculateDetail(index), "equipmentUsageFee", response.data.data[index].equipmentUsageFee);
                            });
                        });
                });
            },

            calculateFacility: function () {
                const self = this;
                const container = this.$refs['submitBtnContainer-' + this.activeTabIndex];
                const key = this.storeKey + '-calculate-facility';
                const tabIndex = this.activeTabIndex;
                this.$nextTick(function () {
                    const config = container && container[0] && container[0].generateSubmitConfig();
                    if (!config) {
                        return
                    }
                    config.url = '/sapporo/ReservationRequests/CalculateFacility';
                    self.store.request(key, config)
                        .then(function (response) {
                            self.$set(self.calculateDetail(tabIndex), "usageFeeBill", response.data.data.usageFeeBill);
                            self.$set(self.calculateDetail(tabIndex), "equipmentManagement", response.data.data.equipmentManagement);
                            self.$set(self.calculateDetail(tabIndex), "allUsageFee", response.data.data.allUsageFee);
                            self.$set(self.calculateDetail(tabIndex), "roomUsageFee", response.data.data.roomUsageFee);
                            self.$set(self.calculateDetail(tabIndex), "equipmentReductionFee", response.data.data.equipmentReductionFee);
                            self.$set(self.calculateDetail(tabIndex), "equipmentAdditionalFee", response.data.data.equipmentAdditionalFee);
                            self.$set(self.calculateDetail(tabIndex), "equipmentUsageFee", response.data.data.equipmentUsageFee);
                        });
                });
            },

            isEditEquipment: function () {
                if (!!this.activeEquipmentKey) {
                    if (_.find(this.errorMessage, ['name', 'activeEquipment'])) {
                        return true;
                    } else {
                        this.errorMessage.push({
                            message: '編集中の備品が有ります。',
                            mode: 'error',
                            name: 'activeEquipment'
                        });
                        return true;
                    }
                }
                return false;
            },

            calculateDetail: function (tabIndex) {
                return this.values.detailList[tabIndex];
            },


            showTabOf: function (index) {
                const self = this;
                this.beforeChangeTab(function () {
                    self.activeTabIndex = index;
                    self.setActiveIndexToURLParam();
                });
            },
            showPrevTab: function () {
                const self = this;
                this.beforeChangeTab(function () {
                    self.activeTabIndex--;
                    self.setActiveIndexToURLParam();
                });
            },
            showNextTab: function () {
                const self = this;
                this.beforeChangeTab(function () {
                    self.activeTabIndex++;
                    self.setActiveIndexToURLParam();
                });
            },


            openEquipmentDialog() {
                this.equipmentDialog = true;
                this.requestAndFetchEquipments();
            },
            requestAndFetchEquipments() {
                const self = this;
                const key = this.storeKey + '-get-equipments';
                this.equipmentDialogLoading = true;
                this.$nextTick(function () {
                    self.store.request(key, {
                        url: '/sapporo/ReservationRequests/SearchEquipments',
                        params: {
                            acceptanceBranchNumber: self.activeDetail.id
                        }
                    }).then(function (response) {
                        self.equipmentSearchList = response.data.data || [];
                        self.equipmentList = response.data.data || [];
                        self.values.equipmentCategoryOptions =
                            _.chain(self.equipmentList).map(e => { return { id: e.equipmentCategoryCode || 'SET', label: e.equipmentCategoryName } }).uniqBy('id').value();
                        self.equipmentDialogLoading = false;
                    });
                });
            },
            filterEquipmentList(categoryCode) {
                if (categoryCode) {
                    this.equipmentList = _.filter(this.equipmentSearchList, e => (e.equipmentCategoryCode|| 'SET') == categoryCode);
                }
                else {
                    this.equipmentList = this.equipmentSearchList;
                }
                this.equipmentPagination.page = 1;
            },
            prevEquipmentDialogTab() {
                this.equipmentDialogActiveTabIndex = 0;
            },
            nextEquipmentDialogTab() {
                const self = this;
                const inputs = this.equipmentSelectedsInputs;
                const activeDetail = this.activeDetail;
                this.equipmentDialogLoading = true;
                this.equipmentSelectedsInputs =
                    _.reduce(this.equipmentSelecteds, function (list, equipment) {
                        const id = equipment.equipmentKey;
                        list[id] = inputs[id] || Object.assign({}, equipment, {
                            usageTimes: _.clone(activeDetail.usageTimes),
                            useNumber: _.isNil(equipment.useNumber) ? 1 : equipment.useNumber,
                        });
                        return list;
                    }, {});
                this.$nextTick(function () {
                    this.requestEquipmentFee().finally(function (data) {
                        self.equipmentDialogLoading = false;
                        self.equipmentDialogActiveTabIndex = 1;
                    });
                });
            },
            requestEquipmentFee(equipment, name) {
                const self = this;
                const container = this.$refs['submitBtnContainer-' + this.activeTabIndex];
                const key = this.storeKey + this.equipmentCalcurateLabel +
                    (equipment ? '-' + equipment.equipmentKey : '');
                const config = container && container[0] && container[0].generateSubmitConfig(true);
                const inputList = this.equipmentSelectedsInputList;
                if (equipment) {
                    if (!(equipment.usageTimes.start && equipment.usageTimes.end)) {
                        return;
                    }
                    config.data.equipments = [equipment];
                } else {
                    config.data.equipments = _.cloneDeep(inputList);
                }
                config.url = '/sapporo/ReservationRequests/CalculateEquipment';
                return self.store.request(key, config)
                    .then(function (response) {
                        if (equipment) {
                            self.editingEquipment = response.data.data[0];
                        }
                        else {
                            self.equipmentSelectedsInputs = _.chain(response.data.data).keyBy('equipmentKey').value();
                        }
                    }).catch(function (error) {
                        _.forEach(error.response.data.errors, (value, key) => {
                            if ('_base' != key) {
                                if (equipment) {
                                    self.$set(self.errorList, name, value);
                                }
                                else {
                                    self.$set(self.equipmentErrors, 'equip[' + key + '].usageTimes', value);
                                }
                            }
                        });
                    });
            },
            toggleEquipmentSelected: function (equipment, val) {
                const list = this.equipmentSelecteds;
                const id = equipment.equipmentKey;
                if (val) {
                    list.push(equipment);
                }
                else {
                    const index = _.findIndex(list, ['equipmentKey', id]);
                    list.splice(index, 1);
                }
            },
            addEquipmentToDetail() {
                this.equipmentDialogValid = this.$refs.equipmentDialogForm.validate();
                if (this.equipmentDialogValid) {
                    const activeDetail = this.activeDetail;
                    const inputs = this.equipmentSelectedsInputs;
                    activeDetail.equipmentManagement.equipments =
                        _.concat(activeDetail.equipmentManagement.equipments || [],
                            _.map(_.filter(this.equipmentSelecteds, 'allowUserRequest'), function (equipment) {
                                return inputs[equipment.equipmentKey];
                            })
                        );
                    this.equipmentDialog = false;
                    this.resetEquipmentSelected();
                    this.$nextTick(function () {
                        this.calculateFacility();
                    });
                }
            },
            resetEquipmentSelected: function() {
                this.equipmentSelecteds = [];
                this.equipmentSelectedsIndex = {};
                this.equipmentSelectedsInputs = {};
                this.equipmentCategoryFilter = null;
            },
            isUnselectableEquipment: function(equipment) {
                return this.isAddedEquipment[equipment.equipmentKey] || equipment.stockQuantity === 0;
            },


            genEquipmentName: function(equipment) {
                return equipment.equipmentName;
            },
            removeEquipment: function(equip) {
                const activeDetail = this.activeDetail
                const index = _.findIndex(activeDetail.equipmentManagement.equipments, ['equipmentKey', equip.equipmentKey])
                if (index > -1)
                    activeDetail.equipmentManagement.equipments.splice(index, 1)
                this.updateGlobalStatus('備品を取消しました。')
                this.$nextTick(function () {
                    this.calculateFacility();
                });
            },
            editEquipment: function(equip) {
                const self = this;
                this.activeEquipmentKey = equip.equipmentUniqueKey;
                this.activeEquipment = equip;
                this.requestEquipmentFee(equip);
                this.$nextTick(function() {
                    const el = self.$el.querySelector('#equipment-' + equip.equipmentKey);
                    if (el) {
                        el.focus();
                    }
                })
            },
            applyEditingEquipment: function() {
                Object.assign(this.activeEquipment, this.editingEquipment);
                this.cancelEditingEquipment();
                this.updateGlobalStatus('備品の編集を適用しました。');
                this.$nextTick(function () {
                    this.calculateFacility();
                });
            },
            cancelEditingEquipment: function () {
                const self = this;
                const id = this.activeEquipmentKey;
                this.activeEquipmentKey = null;
                this.activeEquipment = null;
                this.editingEquipment = null;
                this.$nextTick(function() {
                    const el = self.$el.querySelector('#equipment-' + id);
                    if (el) {
                        el.focus();
                    }
                })
                this.updateGlobalStatus('備品の編集をキャンセルしました。');
            },

            equipmentUsageTimeRules(equipment) {
                var self = this;
                var usageDate = this.activeDetail.usageDate.split('T')[0];
                var equipments = this.activeDetail.equipmentManagement.equipments;
                return (value) => {
                    var isValid = true;
                    var required = this.Required();
                    isValid = required(value);
                    if (isValid !== true) return isValid;
                    isValid = required(value[0]);
                    if (isValid !== true) return isValid;
                    isValid = required(value[1]);
                    if (isValid !== true) return isValid;

                    var es = self.toDate(usageDate, value[0]);
                    var ee = self.toDate(usageDate, value[1], true);
                    var rs = self.toDate(usageDate, self.activeDetail.usageTimes.start);
                    var re = self.toDate(usageDate, self.activeDetail.usageTimes.end, true);
                    if (!(es.getTime() >= rs.getTime() &&
                        ee.getTime() <= re.getTime())) return '室場の利用時間内で入力してください。';

                    if (equipments && equipments.length > 0) {
                        //ee.setMinutes(ee.getMinutes() - 1);
                        var duplicateEquipments = _.filter(equipments, function (e) {
                            if (e != equipment && e.equipmentKey == equipment.equipmentKey) {
                                var os = self.toDate(usageDate, e.usageTimes.start);
                                var oe = self.toDate(usageDate, e.usageTimes.end, true);
                                //oe.setMinutes(oe.getMinutes() - 1);
                                //return es.getTime() <= oe.getTime() && ee.getTime() >= os.getTime();
                                return es.getTime() == os.getTime() && ee.getTime() == oe.getTime();
                            }
                            else {
                                return false;
                            }
                        });
                        if (duplicateEquipments.length > 0) {
                            return self.$options.filters.i18n('{0}の{1}が重複しています。', equipment.equipmentName, '時間帯');
                        }
                    }
                    return isValid;
                }
            },
            toDate: function (dateString, timeString, isEnd) {
                var date = new Date(dateString);
                var times = timeString.split(':');
                var day = 0;
                var hour = parseInt(times[0], 10);
                var minute = parseInt(times[1], 10);
                if (isEnd && (hour == 0 || hour == 1) && minute == 0) {
                    day = 1;
                    hour = 0;
                }
                date.setMinutes((day * 24 * 60) + (hour * 60) + minute);
                return date;
            },
            getCopyConfirm: function(index) {
                const detail = this.detailListsForCopy[index];
                const activeDetail = this.activeDetail;
                const messages = this.copyItems.replace("${feeItemCategoryNames}", _.chain(detail?.feeItemCategories || []).filter("isChange").map(function (it) { return "<li>" + it.feeItemCategoryName + "</li>" }).join("").value());
                return {
                    title: '内容コピーの確認',
                    message: '<p>予約' + detail.id + 'の以下の内容を 予約' + activeDetail.id + 'にコピーします。よろしいですか？</p>' + messages,
                    type: 'warning',
                    labelOk: 'コピー'

                }
            },
            copyFrom: function(detail) {
                const self = this;
                const key = this.storeKey + '-copy-detail-content';
                this.targetCopyDetail = detail;
                this.$nextTick(function() {
                    const config = {
                        url: '/sapporo/ReservationRequests/CopyReservation',
                        method: 'get',
                        params: {
                            srcAcceptanceBranchNumber: detail.acceptanceBranchNumber,
                            destAcceptanceBranchNumber: self.activeDetail.acceptanceBranchNumber,
                        }
                    };
                    
                    self.store.request(key, config)
                        .then(function(response) {
                            const activeDetail = self.activeDetail;
                            let shouldCalcFacility = false;
                            if (response.data.u !== null) {
                                shouldCalcFacility = true;
                                self.$set(activeDetail, "utilizationPurposeId",
                                    _.find(activeDetail.utilizationPurposes, ['utilizationPurposeId', response.data.u]));
                            }
                            if (response.data.p !== null) {
                                shouldCalcFacility = true;
                                self.$set(activeDetail, "usePeople", response.data.p);
                            }
                            if (response.data.fc !== null) {
                                shouldCalcFacility = true;
                                _.forEach(response.data.fc, function (src)
                                {
                                    var dest = _.find(activeDetail.feeItemCategories, ["feeItemCategoryCode", src.feeItemCategoryCode]);
                                    if (dest) {
                                        self.$set(dest, "selectedCode", src.selectedCode);
                                    }
                                })
                            }
                            if (response.data.e !== null) {
                                shouldCalcFacility = true;
                                activeDetail.equipmentManagement.equipments = response.data.e
                            }
                            if (response.data.fi !== null) {
                                self.$set(activeDetail, "reservationFreeItems", response.data.fi);
                            }
                            self.$set(activeDetail, "message", response.data.m);
                            
                            if (response.data.em.length > 0) {
                                // エラーがあった場合
                                self.addGlobalSnackbar({
                                    mode: 'warning',
                                    message: response.data.em.join('<br>')
                                })
                            } else {
                                // エラーが無かった場合
                                self.addGlobalSnackbar({
                                    mode: 'info',
                                    message: 'コピーしました。'
                                })
                            }

                            if (shouldCalcFacility) {
                                self.$nextTick(function () {
                                    self.calculateFacility();
                                });
                            }
                        })
                        .finally(function(response) {
                            self.targetCopyDetail = null;
                        })
                })
            },

            removeDetail : async function() {
                const self = this;
                const key = this.storeKey + '-remove-detail-content'
                const config = {
                    url: '/sapporo/ReservationRequests/RemoveContent',
                    method: 'get',
                    params: {
                        acceptanceBranchNumber: self.activeDetail.acceptanceBranchNumber,
                    }
                };
                    
                self.store.request(key, config)
                    .then(function (response) {
                        window.location.href = '/sapporo/ReservationRequests/Insert/011002/0055' + '?active=' + response.data.data;
                    })
                    .finally(function (response) {
                    });
            },

            equipmentErrorClear: function(name, value) {
                if (this.equipmentErrors && name) {
                    this.deleteProperty(this.equipmentErrors, name)
                }
            },

            setActiveIndexToURLParam: function() {
                this.replaceHistoryState({
                    active: this.activeTabIndex
                });
            },

            onFocusDisabled(label) {
                this.store.setDisabling(label, true);
            },

            onBlurDisabled(label) {
                this.store.setDisabling(label, false);
            },
        }
    })
</script>



</body></html>